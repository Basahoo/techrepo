#pragma checksum "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\Pricing\ProductList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "929dadba9b4d9202b972d43b05e71c4c65594dd4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Pricing_ProductList), @"mvc.1.0.view", @"/Views/Pricing/ProductList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\_ViewImports.cshtml"
using OneCloudTransformer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\_ViewImports.cshtml"
using OneCloudTransformer.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"929dadba9b4d9202b972d43b05e71c4c65594dd4", @"/Views/Pricing/ProductList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b911fba751b71aced80c9652ab89274c53d28d3a", @"/Views/_ViewImports.cshtml")]
    public class Views_Pricing_ProductList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<div class=\"text-center\">\r\n    <h1 class=\"display-4\"> Pricing calculator</h1>\r\n    <p class=\"text-heading3\">Configure and estimate the costs for Azure products</p>\r\n</div>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "929dadba9b4d9202b972d43b05e71c4c65594dd43738", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            WriteLiteral(@"
<script type=""text/javascript"">
    jQuery(document).ready(function () {

        var allProducts;
        function ProjectList() {
            var org = $(""#txtOrg"").val();
            var pat = $(""#txtpat"").val();
            var url = ""https://localhost:44362/api/v1/GetProductList"";
            jQuery.ajax({
                url: url,
                type: ""get"",
                contentType: ""application/json"",
                success: function (result, status, xhr) {
                    //$("".divtoken"").html(result);
                    if (result.length > 0) {
                        allProducts = result;
                        fillProductList(result);
                        calucalteTotalCost();
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                }
            });
        }

        function fillProductList(result) {

            for (var i = 0; i < result.length; i++) {
     ");
            WriteLiteral(@"           var product = result[i];
                var productName = product.productName;   // 'Virtual Machines';
                var imageSrc = product.imageSrc;     // '/AzureIcons/VM-icon.png';
                var prodDesc = product.description;  // 'Provision Windows and Linux virtual machines in seconds';
                var prodPrice = product.unitPrice;    // 152.57;
                var totalprodPrice = prodPrice;
                var prodDetails = product.details;     //'1 D2 v3 (2 vCPUs, 8 GB RAM) x 730 Hours (Pay as you go), Windows (License included), OS Only; 0 managed disks â€“ S4, 100 transaction units; Inter Region transfer type, 5 GB outbound data transfer from West US to East Asia';
                var itemDiv = ' <div class=""divProductItems""> ' +
                    ' <div class=""divproductimagecontainer inline-flex"">' +
                    '    <img class=""img-product"" src=' + imageSrc + '>' +
                    '    <div>' +
                    '        <div class=""imageDescript");
            WriteLiteral(@"ion"">' + productName + '</div> ' +
                    '       <div class=""productDescription""> ' + prodDesc + '</div>' +
                    '   </div>' +
                    '  </div> ' +
                    '  <div class=""productdetails"">' + prodDetails + '</div> ' +
                    '  <div class=""pricediv inline-flex margin-top30""> ' +
                    '      <div class=""divpriceInfo""> ' +
                    '         <span class=""costInfo"">Per Instance</span> ' +
                    '         <span class=""priceText margin-left20"">$</span><span class=""priceVal priceText margin-right20"">' + prodPrice + '</span> ' +
                    '    </div>  <span class=""costInfo margin-top10"" style=""font-style:normal"">X</span> ' +
                    '   <div class=""number-holder wide widest ""> ' +
                    '      <div class=""wa-textNumber"">  ' +
                    ' <input class=""spinbutton numeric"" role=""spinbutton""  aria-valuemax=""100""  aria-valuemin=""0""  aria-valuenow=""1"" type=""nu");
            WriteLiteral(@"mber"" min=""0"" value=""1"">  </div> </div>' +
                    '   <div class=""divTotalpriceInfo"">' +
                    '                 <span class=""costInfo"">Total: </span>' +
                    '                 <span class=""priceText margin-left20"">$</span><span class=""totalpriceVal priceText margin-right20"">' + totalprodPrice + '</span>' +
                    '    </div>' +
                    '  </div>' +
                    ' </div> ';
                $('.divProductList').append(itemDiv);
                registerspinbuttonEvent();
            }
        }

        function calucalteTotalCost() {
            var sum = 0;
            $('.totalpriceVal').each(function () {
                sum += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
            });
            $("".totalcost"").html(parseFloat(sum).toFixed(2));
        }

        // Clear Search Event
        $("".clear-search"").click(function (e) {
            // Clear the ProductSearch textbox
         ");
            WriteLiteral(@"   $("".product-search"").val('');

            // Show All Product
            $('.divProductItems').show();

        });

        // Product Search Event
        $("".product-search"").keyup(function (e) {
            var searchText = $(this).val().trim().toLowerCase();

            // First Hide all
            $('.divProductItems').hide();

            if (searchText.length > 0) {

                $('.divProductItems').each(function () {
                    if ($(this).find(""div.imageDescription"").html().trim().toLowerCase().indexOf(searchText) >=0) {
                        $(this).show();
                    }
                });


                ////Old Logic
                //var searchProducts = $.grep(allProducts, function (n, i) { return n.productName.toLowerCase().indexOf(searchText.toLowerCase()) >= 0; });
                //if (searchProducts.length > 0) {

                //    // Show Only filtered Products
                //    showFilteredData(searchProducts);
      ");
            WriteLiteral(@"          //}
            }
            else {
                // Show All Product
                $('.divProductItems').show();
            }
           
        });

        //Dispaly Filterd SearchProducts
        function showFilteredData(filteredData) {

            // First Hide all
            $('.divProductItems').hide();

           // Show Filtered Item Only
            $.each(filteredData, function (i, n) {

                $('.divProductItems').each(function () {
                    if ($(this).find(""div.imageDescription"").html().trim() == n.productName) {
                        $(this).show();
                    }
                });
            });
        }

        function registerspinbuttonEvent() {
            $("".spinbutton"").change(function (e) {
                var selectedVal = $(this).val();
                var unitPrice = $(this).closest("".pricediv"").find(""span.priceVal"").html().trim();
                var totalPrice = parseFloat(unitPrice * selectedVal");
            WriteLiteral(@").toFixed(2);

                // UpdateTotalPrice
                $(this).closest("".pricediv"").find(""span.totalpriceVal"").html(totalPrice);

                calucalteTotalCost();
            });
        }

        // RegisterSpinButtonEvent
       // registerspinbuttonEvent();

        calucalteTotalCost();
        ProjectList();
    });
</script>

<div class=""divpagemaincontent inline-flex"">

  

");
            WriteLiteral("\r\n    <div id=\"divProductList\" class=\"ProductList\">\r\n        <div class=\"product-search-container\">\r\n            <input class=\"product-search\" aria-label=\"Search products\" placeholder=\"Search products\"");
            BeginWriteAttribute("value", " value=\"", 7091, "\"", 7099, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n            <button class=\"clear-search\" aria-label=\"Clear search\" type=\"submit\" data-bi-an=\"body\" data-bi-tn=\"clear-search\">Ã—</button>\r\n        </div>\r\n        <div");
            BeginWriteAttribute("class", " class=\"", 7268, "\"", 7276, 0);
            EndWriteAttribute();
            WriteLiteral(@">
            <div class=""projectdivsection"">
                <div class=""row-header""> Product List: </div>
                <span class=""spaninfo""> Select Product from the list to view the estimates</span>
                <table id=""tblProductList""></table>
                <div class=""divProductList""></div>
                
            </div>

            <div class=""projectcreationmessage""></div>
        </div>
");
            WriteLiteral(@"
    </div>

    <div class=""divestimate"">
        <div class=""divEstimateHeader""> Your Estimate</div>
        <div class=""projectdivsection"">
            <div class=""row-header"">Estimate</div>
            <span class=""spaninfo""> Total estimation as per selected products</span>
            <div class=""newsectionmessage""></div>
            <span class=""costInfo"">Total: </span><span class=""priceText margin-left20 text-black-50"">$</span><span class=""totalcost priceText margin-right20 text-black-50 font-weight-bold"">152.57</span>
        </div>
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
