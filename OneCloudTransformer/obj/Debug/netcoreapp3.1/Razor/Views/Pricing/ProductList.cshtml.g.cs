#pragma checksum "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\Pricing\ProductList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3c5f0390266e28ff3bf76e7f12595e23b31e25f5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Pricing_ProductList), @"mvc.1.0.view", @"/Views/Pricing/ProductList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\_ViewImports.cshtml"
using OneCloudTransformer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\_ViewImports.cshtml"
using OneCloudTransformer.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3c5f0390266e28ff3bf76e7f12595e23b31e25f5", @"/Views/Pricing/ProductList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b911fba751b71aced80c9652ab89274c53d28d3a", @"/Views/_ViewImports.cshtml")]
    public class Views_Pricing_ProductList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<div class=\"text-center\">\r\n");
            WriteLiteral("    <p class=\"text-heading3\">Configure and estimate the costs for Azure / AWS products</p>\r\n</div>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3c5f0390266e28ff3bf76e7f12595e23b31e25f53719", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            WriteLiteral(@"
<script type=""text/javascript"">
    jQuery(document).ready(function () {


        // SetBackColor for TopMenu
        $("".divCloudEconomics"").addClass(""selectedTopMenu"");
        $("".divCloudEconomics span a"").addClass(""selectedTopMenu"");

        // Get Selected Project from DevOps
        var currentSelectedProject = sessionStorage.getItem('currentSelectedProject');
        $("".projectName"").text(currentSelectedProject);

        function hideDivTab() {
            $("".divTab"").hide();
        }

        function LoadProductList(source) {
            var org = $(""#txtOrg"").val();
            var pat = $(""#txtpat"").val();

            // Load Products as per selected checkbox

            var url = ""https://localhost:44362/api/v1/GetProductList?source=""+source;
            jQuery.ajax({
                url: url,
                type: ""get"",
                contentType: ""application/json"",
                success: function (result, status, xhr) {

                    if (result");
            WriteLiteral(@".length > 0) {
                        fillProductList(result, source);
                        calucalteTotalCost();
                        registerTabEvents();
                        ActiveSelectedTab(source);
                        createEstimateSummary();
                        if (source == ""AWS"") {
                            highlightTabSelect(1);
                        }
                        else {
                            highlightTabSelect(0);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                }
            });
        }

        function fillProductList(result, source) {

            var priceValClass = ""totalpriceValAzure"";
            var productListDiv = "".divProductListAzure"";

            if (source == ""AWS"") {
                priceValClass = ""totalpriceValAws"";
                productListDiv = "".divProductListAWS"";
            }

");
            WriteLiteral(@"            $(productListDiv).html('');

            for (var i = 0; i < result.length; i++) {
                var product = result[i];
                var productName = product.productName;   // 'Virtual Machines';
                var imageSrc = product.imageSrc;     // '/AzureIcons/VM-icon.png';
                var prodDesc = product.description;  // 'Provision Windows and Linux virtual machines in seconds';
                var prodPrice = product.unitPrice;    // 152.57;
                var totalprodPrice = prodPrice;
                var prodDetails = product.details;     //'1 D2 v3 (2 vCPUs, 8 GB RAM) x 730 Hours (Pay as you go), Windows (License included), OS Only; 0 managed disks â€“ S4, 100 transaction units; Inter Region transfer type, 5 GB outbound data transfer from West US to East Asia';
                var itemDiv = ' <div class=""divProductItems""> ' +
                    ' <div class=""divproductimagecontainer inline-flex"">' +
                    '    <img class=""img-product"" src=' + imag");
            WriteLiteral(@"eSrc + '>' +
                    '    <div>' +
                    '        <div class=""imageDescription"">' + productName + '</div> ' +
                    '       <div class=""productDescription""> ' + prodDesc + '</div>' +
                    '   </div>' +
                    '  </div> ' +
                    '  <div class=""productdetails"">' + prodDetails + '</div> ' +
                    '  <div class=""pricediv inline-flex margin-top30""> ' +
                    '      <div class=""divpriceInfo""> ' +
                    '         <span class=""costInfo"">Per Instance</span> ' +
                    '         <span class=""priceText margin-left20"">$</span><span class=""priceVal priceText margin-right20"">' + prodPrice + '</span> ' +
                    '    </div>  <span class=""costInfo margin-top10"" style=""font-style:normal"">X</span> ' +
                    '   <div class=""number-holder wide widest ""> ' +
                    '      <div class=""wa-textNumber"">  ' +
                    ' <input class=""sp");
            WriteLiteral(@"inbutton numeric"" role=""spinbutton""  aria-valuemax=""100""  aria-valuemin=""0""  aria-valuenow=""1"" type=""number"" min=""0"" value=""1"">  </div> </div>' +
                    '   <div class=""divTotalpriceInfo"">' +
                    '                 <span class=""costInfo"">Total: </span>' +
                    '                 <span class=""priceText margin-left20"">$</span><span class=""  ' + priceValClass + ' totalpriceVal  priceText margin-right20"">' + totalprodPrice + '</span>' +
                    '    </div>' +
                    '  </div>' +
                    ' </div> ';
                $(productListDiv).append(itemDiv);
              
                registerspinbuttonEvent(source);

            }
        }

        function calucalteTotalCost() {
            var sumAzure = 0;
            $('.totalpriceValAzure').each(function () {
                sumAzure += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
            });
            $("".totalcostAzure"").html(parseFloat(");
            WriteLiteral(@"sumAzure).toFixed(2));

            var sumAws = 0;
            $('.totalpriceValAws').each(function () {
                sumAws += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
            });
            $("".totalcostAWS"").html(parseFloat(sumAws).toFixed(2));
        }

        // Clear Search Event
        $("".clear-search"").click(function (e) {
            // Clear the ProductSearch textbox
            $("".product-search"").val('');

            // Show All Product
            $('.divProductItems').show();

        });

        // Product Search Event
        $("".product-search"").keyup(function (e) {
            var searchText = $(this).val().trim().toLowerCase();

            // First Hide all
            $('.divProductItems').hide();

            if (searchText.length > 0) {

                $('.divProductItems').each(function () {
                    if ($(this).find(""div.imageDescription"").html().trim().toLowerCase().indexOf(searchText) >= 0) {
        ");
            WriteLiteral(@"                $(this).show();
                    }
                });
            }
            else {
                // Show All Product
                $('.divProductItems').show();
            }

        });

       
        function hideAllProductDataDiv() {
            $("".azureProductList"").hide();
            $("".awsProductList"").hide();
        }

        function highlightTabSelect(surce) {
            //RemoveHighlight Class for all
            $("".btnawsTab"").removeClass(""selectedTopMenu"");
            $("".btnAzureTab"").removeClass(""selectedTopMenu"");

            if (surce == 0) {
                // Hihlight self
                $("".btnAzureTab"").addClass(""selectedTopMenu"");
            }
            if (surce ==1) {

                // Hihlight self
                $("".btnawsTab"").addClass(""selectedTopMenu"");
            }
        }

        function registerTabEvents(){
            // Click on AzureTab
            $("".btnAzureTab"").click(function (e) {
  ");
            WriteLiteral(@"              // hIDE aLL
                hideAllProductDataDiv();

                // Display AzreTab
                $("".azureProductList"").show();
                highlightTabSelect(0);

            });

            // Click on AWS
            $("".btnawsTab"").click(function (e) {
                // hIDE aLL
                hideAllProductDataDiv();

                // Show AWS
                $("".awsProductList"").show();
                highlightTabSelect(1);
               
            });
        }

        //Checkox group checked 
        $('.azureChkbox').change(function () {
            if (this.checked) {
                // Load Data for selected Options
                LoadProductList($(this).val());
            }
            else {
                // Hide the selected resources
                $("".azureProductList"").hide();
                // Disable Tab Control
                $("".btnAzureTab"").hide();

                // CheckIf AWS checkbox is checked then display");
            WriteLiteral(@" that
                if ($('.awsChkbox:checked').length > 0) {
                   
                    $("".awsProductList"").show();
                    $("".btnawsTab"").show();
                    highlightTabSelect(1);
                }
            }
           
        });

        //Checkox group checked 
        $('.awsChkbox').change(function () {
            if (this.checked) {
                // Load Data for selected Options
                LoadProductList($(this).val());
            }
            else {
                // Hide the selected resources
                $("".awsProductList"").hide();
                // Disable Tab Control
                $("".btnawsTab"").hide();

                // CheckIf Azure checkbox is checked then display that
                if ($('.azureChkbox:checked').length > 0) {

                    $("".azureProductList"").show();
                    $("".btnAzureTab"").show();
                    highlightTabSelect(0);
                }
            }");
            WriteLiteral(@"
           
        });


        function hideProductData(source) {
            if (source == ""Azure"") {
                $("".azureProductList"").hide();

                // Disable Tab Control
                $("".btnAzureTab"").hide();
            }
            if (source == ""AWS"") {
                $("".awsProductList"").hide();

                // Disable Tab Control
                $("".btnawsTab"").hide();
            }
        }

        function ActiveSelectedTab(source) {
            if (source == ""Azure"") {
                $("".azureProductList"").show();
                $("".awsProductList"").hide();

                // Disable Tab Control
                $("".btnAzureTab"").show();
            }
            if (source == ""AWS"") {
                $("".awsProductList"").show();
                $("".azureProductList"").hide();

                // Disable Tab Control
                $("".btnawsTab"").show();
            }
        }

 
        function registerspinbuttonEvent(source)");
            WriteLiteral(@" {
            $("".spinbutton"").change(function (e) {
                var selectedVal = $(this).val();
                var unitPrice = $(this).closest("".pricediv"").find(""span.priceVal"").html().trim();
                var totalPrice = parseFloat(unitPrice * selectedVal).toFixed(2);

                // UpdateTotalPrice
                $(this).closest("".pricediv"").find(""span.totalpriceVal"").html(totalPrice);

                calucalteTotalCost();
                createEstimateSummary();
            });
        }

        function createEstimateSummary() {
            // Clean the Summary tag
            $("".estimateSummary"").html('');

            // Check All selected quantity. 
            //If any quantity > 0, Get the Product Name, Quantity, Total cose.
            // Add into Arrray to display in the Summary

            $("".spinbutton"").each(function (e) {
                var instanceCount = $(this).val();
                if (instanceCount > 0) {
                    var tp = $(this");
            WriteLiteral(@").closest("".pricediv"").find(""span.totalpriceVal"").html();
                    var productName = $(this).closest("".divProductItems"").find(""div.imageDescription"").html();

                    var summaryItemText = '<b>' + instanceCount + '</b> Instance of   <b>' + productName + '</b>  <b>$ ' + tp + '</b>';
                    var summaryHtml = ' <div class=""estimateSummaryItem""> ' +
                        '  <span class="" productdetails"" style = ""font-size:18px;"" > ' + summaryItemText + '</span > ' +
                        ' </div>';
                    $(this).closest("".divpagemaincontent "").find(""div.estimateSummary"").append(summaryHtml);
                }
            });

        }

        //$("".createaddWorkItemIT"").click(function (e) {

        //    // Create WorkItem For IT TEAM 

        //    // Needs to know for which project 


        //})l

        calucalteTotalCost();
        hideDivTab();
        hideAllProductDataDiv();

        createEstimateSummary();

        /");
            WriteLiteral(@"/ No Default ProductList
        //LoadProductList();


        // No default Tab Event
        //registerTabEvents();
        
    });
</script>

<span class=""projectName""></span>

<div class="" divSelectSource inline-flex "" style=""margin-left:31%; border:1px solid blue; padding:20px; margin-bottom:20px;"" >
    <div class=""font-weight-bold""> Select resource container </div>
    <div");
            BeginWriteAttribute("class", " class=\"", 12993, "\"", 13001, 0);
            EndWriteAttribute();
            WriteLiteral(@">
            <input type=""checkbox"" class=""azureChkbox resourceCheckBox marginleft-50"" name=""sourceCheckbx"" value=""Azure"" /> <span class=""margin-left20 font22"">Azure</span>
            <input type=""checkbox"" class="" awsChkbox resourceCheckBox marginleft-50"" name=""sourceCheckbx"" value=""AWS"" /> <span class=""margin-left20 font22"">AWS </span>
    </div>
</div>
<br />
<div class=""divTabContainer inline-flex margin-left25"">
    <input type=""button"" id=""btnAzureTab"" class=""divTab btnAzureTab bluebutton"" value=""Azure"" />
    <input type=""button"" id=""btnawsTab"" class=""divTab btnawsTab bluebutton"" value=""AWS"" />
</div>

<div class=""divpagemaincontent inline-flex azureProductList"">

        <div id=""divProductList"" class=""ProductList"">
            <div class=""product-search-container"">
                <input class=""product-search"" aria-label=""Search products"" placeholder=""Search products""");
            BeginWriteAttribute("value", " value=\"", 13908, "\"", 13916, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                <button class=\"clear-search\" aria-label=\"Clear search\" type=\"submit\" data-bi-an=\"body\" data-bi-tn=\"clear-search\">Ã—</button>\r\n            </div>\r\n            <div");
            BeginWriteAttribute("class", " class=\"", 14097, "\"", 14105, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                <div class=""projectdivsection"">
                    <div class=""row-header""> Product List: </div>
                    <span class=""spaninfo""> Select Product from the list to view the estimates</span>
                    <table id=""tblProductList""></table>
                    <div class=""divProductListAzure""></div>

                </div>
            </div>
        </div>

        <div class=""divestimate"">
            <div class=""divEstimateHeader""> Your Estimate</div>
            <div class=""projectdivsection"">
                <div class=""row-header"">Estimate</div>
                <span class=""spaninfo""> Total estimation as per selected products</span>
                <div class=""estimateSummary margin10"">
                    <div class=""estimateSummaryItem"">
                        <span class=""priceText margin-left20 text-black-50"" style=""font-size:18px;"">1 Instance of Virtual Machine Total Cost: $ 152.57</span>
                    </div>
                </div>
       ");
            WriteLiteral(@"         <div class=""text-center"">
                    <span class=""costInfo"">Total: </span><span class=""priceText margin-left20 text-black-50"">$</span><span class=""totalcostAzure priceText margin-right20 text-black-50 font-weight-bold"">152.57</span>
                </div>
            </div>
            <div class=""text-right"">
                <input type=""button"" id=""btnaddWorkItemIT"" class=""bluebutton selectedTopMenu createaddWorkItemIT"" value=""Create WorkItems"" />
            </div>
        </div>
</div>

<div class=""divpagemaincontent inline-flex awsProductList"">
    <div id=""divProductList"" class=""ProductList"">
        <div class=""product-search-container"">
            <input class=""product-search"" aria-label=""Search products"" placeholder=""Search products""");
            BeginWriteAttribute("value", " value=\"", 15914, "\"", 15922, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n            <button class=\"clear-search\" aria-label=\"Clear search\" type=\"submit\" data-bi-an=\"body\" data-bi-tn=\"clear-search\">Ã—</button>\r\n        </div>\r\n        <div");
            BeginWriteAttribute("class", " class=\"", 16091, "\"", 16099, 0);
            EndWriteAttribute();
            WriteLiteral(@">
            <div class=""projectdivsection"">
                <div class=""row-header""> Product List: </div>
                <span class=""spaninfo""> Select Product from the list to view the estimates</span>
                <table id=""tblProductList""></table>
                <div class=""divProductListAWS""></div>

            </div>
        </div>
    </div>

    <div class=""divestimate"">
        <div class=""divEstimateHeader""> Your Estimate</div>
        <div class=""projectdivsection"">
            <div class=""row-header"">Estimate</div>
            <span class=""spaninfo""> Total estimation as per selected products</span>
            <div class=""estimateSummary margin10"">
                <div class=""estimateSummaryItem"">
                    <span class=""priceText margin-left20 text-black-50"" style=""font-size:18px;"">1 Instance of Virtual Machine Total Cost: $ 152.57</span>
                </div>
            </div>
            <div class=""text-center"">
                <span class=""costInfo"">Tot");
            WriteLiteral(@"al: </span><span class=""priceText margin-left20 text-black-50"">$</span><span class=""totalcostAWS priceText margin-right20 text-black-50 font-weight-bold"">152.57</span>
            </div>

        </div>
        <div class=""text-right"">
            <input type=""button"" id=""btnaddWorkItemIT"" class=""bluebutton selectedTopMenu addWorkItemIT"" value=""Create WorkItems"" />
        </div>
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
