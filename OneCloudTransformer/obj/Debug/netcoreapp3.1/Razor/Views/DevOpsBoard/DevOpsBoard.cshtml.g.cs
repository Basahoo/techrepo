#pragma checksum "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\DevOpsBoard\DevOpsBoard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "46607405090bd6a41e59d162a8280adea622594c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DevOpsBoard_DevOpsBoard), @"mvc.1.0.view", @"/Views/DevOpsBoard/DevOpsBoard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\_ViewImports.cshtml"
using OneCloudTransformer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\_ViewImports.cshtml"
using OneCloudTransformer.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"46607405090bd6a41e59d162a8280adea622594c", @"/Views/DevOpsBoard/DevOpsBoard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b911fba751b71aced80c9652ab89274c53d28d3a", @"/Views/_ViewImports.cshtml")]
    public class Views_DevOpsBoard_DevOpsBoard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/AzureIcons/loader_spin.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:154px; height:86px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Pricing", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "ProductList", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\basvm3\source\repos\CloudTransformer\OneCloudTransformer\Views\DevOpsBoard\DevOpsBoard.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"text-center\">\r\n");
            WriteLiteral("</div>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c6957", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            WriteLiteral(@"
<script type=""text/javascript"">
    jQuery(document).ready(function () {

        $("".loadingdiv"").hide();
        // SetBackColor for TopMenu
        $("".divAzureDevOps"").addClass(""selectedTopMenu"");
        $("".divAzureDevOps span a"").addClass(""selectedTopMenu"");

        // Check if use already loggedin
        if (sessionStorage.getItem(""devOpsLogin"") == ""True"") {

            // Hide Login
            $("".connect"").hide();
           // $("".loadingdiv"").show();
            // Load ProductList
            ProjectList();
        }
        else {
            $("".connect"").show();
        }

        //Hide Cloud Economy Button
        $("".divGotoCloudEconomy"").hide();

       
        $(""#divProjectList"").hide();
        $("".process"").hide();
        $("".divoption"").hide();
        $("".newproject"").hide();
        $("".nextsection"").hide();
        $(""#divExistingProjectList"").hide();
        $("".divresult"").hide();
        $(""#btnprocess"").prop('disabled', true);
        $(");
            WriteLiteral(@""".divprojectcreationoptionmain"").hide();
        $("".divAddWorkItems"").hide();
        $("".divSectionExistingWorkItems"").hide();


        function GetToken() {
            jQuery.ajax({
                url: ""https://localhost:44362/api/v1/GetToken"",
                type: ""get"",
                contentType: ""application/json"",
                success: function (result, status, xhr) {
                    $("".divtoken"").html(result);
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                }
            });
        }

        function GetWorkItemList(projectName) {
            $(""#divSectionExistingWorkItems"").hide();
            var org = $(""#txtOrg"").val();
            var pat = $(""#txtpat"").val();
            var url = ""https://localhost:44362/api/v1/GetWorkItemList?org="" + org + ""&pat1="" + pat + ""&projectName="" + projectName;
            jQuery.ajax({
                url: url,
                type: ""get"",
      ");
            WriteLiteral(@"          contentType: ""application/json"",
                success: function (result, status, xhr) {
                    //$("".divtoken"").html(result);
                    if (result.length >= 0) {

                        // Display the Project List in Table
                        $(""#divSectionExistingWorkItems"").show();
                        $('#tblexistingWorkItems').html('');

                        $("".divSectionExistingWorkItems"").show();

                        var headerrow = ""<tr style='background-color: lightgray;'>"" +
                            ""<td>Id  </td>"" +
                            ""<td> Title</td>"" +
                            ""<td> Type</td>"" +
                            ""<td> Status</td>"" +
                            ""</tr>"";
                        $('#tblexistingWorkItems').append(headerrow);

                        for (var i = 0; i < result.length; i++) {

                            var linkUrl = ""https://dev.azure.com/Benefactor-Clairvoyant/"" + proje");
            WriteLiteral(@"ctName + ""/_workitems/edit/"" + result[i].id;
                            var datarow = ""<tr>"" +
                                ""<td> "" + result[i].id + ""</td > "" +
                                ""<td> <a href="" + linkUrl + "" target='_blank'> "" + result[i].fields.title+"" </a></td > "" +
                                ""<td> "" + result[i].fields.workItemType + ""</td > "" +
                                ""<td> "" + result[i].fields.state + ""</td > "" +
                                ""</tr>"";
                            $('#tblexistingWorkItems').append(datarow);
                        }
                       
                    }
                    // $("".divstatus"").append('<br> Project List received !');
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                }
            });
        }

        function ProjectList() {
            $("".loadingdiv"").show();
            var org = $(""#txtOrg"").val();
            var p");
            WriteLiteral(@"at = $(""#txtpat"").val();
            var url = ""https://localhost:44362/api/v1/GetProjectList?org="" + org + ""&pat1="" + pat;
            jQuery.ajax({
                url: url,
                type: ""get"",
                contentType: ""application/json"",
                success: function (result, status, xhr) {
                    $("".loadingdiv"").hide();
                    //$("".divtoken"").html(result);
                    if (result.azprojectList.length >= 0) {

                        // Display the Project List in Table
                        $(""#divExistingProjectList"").show();
                        $('#tblexistingProjects').html('');
                        $(""#btnprocess"").val('Add Pipeline');

                        $("".divprojectcreationoptionmain"").show();

                        var headerrow = ""<tr style='background-color: lightgray;'>"" +
                            ""<td>  </td>"" +
                            ""<td> Project Name</td>"" +
                            ""<td> UR");
            WriteLiteral(@"L</td>"" +
                            ""<td> Pipeline</td>"" +
                            ""</tr>"";
                        $('#tblexistingProjects').append(headerrow);


                        $("".getproject"").hide();
                        $("".process"").show();
                        $("".divoption"").show();
                        $(""#ddlprojectList"").empty();
                        for (var i = 0; i < result.azprojectList.length; i++) {
                            var spanshow = result.azprojectList[i].azPipelineList.length > 0 ? ""span-shown"" : ""span-show"";
                            var datarow = ""<tr>"" +
                                ""<td> <span class='"" + spanshow +
                                "" span-select'>"" +
                                ""<input type='button' class='btnselectproject  btn-blue' data="" + result.azprojectList[i].id + "" value='Select' /></span></td > "" +
                                ""<td> "" + result.azprojectList[i].name + ""</td>"" +
                       ");
            WriteLiteral(@"         ""<td> "" + result.azprojectList[i].url + ""</td>"" +
                                ""<td> "" + result.azprojectList[i].azPipelineList.length + ""</td>"" +
                                ""</tr>"";
                            $('#tblexistingProjects').append(datarow);
                        }
                        $(""input[name=projectoption][value='0']"").prop(""checked"", true);
                        $("".connect"").hide();
                        registerbuttonEvent();
                        //checkprojectoption();
                        checkProcessButton();

                        //Clear project selection
                        sessionStorage.setItem('currentSelectedProject', '');
                    }
                    // $("".divstatus"").append('<br> Project List received !');
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                }
            });
        }

        function CreateProject() {
       ");
            WriteLiteral(@"     var existingProject = $('input[name=""projectoption""]:checked').val() == ""0"";
            var org = $(""#txtOrg"").val();
            var pat = $(""#txtpat"").val();
            var projectName = $(""#txtnewProject"").val();
            var desc = 'CreateNewProject';
            var projectType = $(""#dlltechnology option:selected"").val();

            // Send Work Item List
            var workItemList = [{}];

            $('.divWorkItemRow').each(function () {
                if ($(this).find(""div > textarea"").val().trim().length > 0) {
                    workItemList.push({ 'title': $(this).find(""div > textarea"").val(), 'type': $(this).find(""div > select"").val() });
                }
            });
            workItemList = workItemList.splice(1);
            var url = ""https://localhost:44362/api/v1/CreateProject?projectName="" + projectName + ""&description="" + desc + ""&org="" + org + ""&pat1="" + pat + ""&type="" + projectType + ""&isexist="" + existingProject + ""&numberOfTask="" + workItemList.l");
            WriteLiteral(@"ength;

            $("".projectcreationmessage"").html('<br> Project creation, yaml upload and pipeline is in progress...');
            jQuery.ajax({
                url: url,
                type: ""get"",
                contentType: ""application/json"",
                success: function (result, status, xhr) {
                    if (result.length > 0 && result.toString().indexOf('Error') > 0) {
                        console.log(result);
                    }
                    $("".projectcreationmessage"").html('');
                    $("".newsectionmessage"").html('');
                    $("".divresult"").show();
                    $(""#divExistingProjectList"").hide();
                    $("".divprojectcreationoptionmain"").hide();
                    $("".divAddWorkItems"").hide();
                    $("".newsectionmessage"").append('New Project ' + projectName + '   Created Successfully....<br> Project Link:-  ' + result);
                    $("".newsectionmessage"").append(""<br>Pipeline also");
            WriteLiteral(@" created for the project "" + projectName);
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                }
            });
        }

        function DeleteProject() {
            var org = $(""#txtOrg"").val();
            var pat = $(""#txtpat"").val();
            var projectName = $(""#txtdelProject"").val();
            var url = ""https://localhost:44362/api/v1/DeleteProject?projectName="" + projectName + ""&org="" + org + ""&pat1="" + pat;;

            jQuery.ajax({
                url: url,
                type: ""get"",
                contentType: ""application/json"",
                success: function (result, status, xhr) {
                    $("".divstatus"").append(result);
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                }
            });
        }

        function checkprojectoption() {
            var optionval = $('input[name=""projectopt");
            WriteLiteral(@"ion""]:checked').val();
            if (optionval == ""0"") {
                // Show Existing Section
                $("".span-select"").addClass(""span-show"");
                $("".span-select"").removeClass(""span-hidden"");
                $("".divpipelinecaption"").html('Create Pipeline from Existing Project');
                $(""#txtnewProject"").prop('disabled', true);
                $(""#txtnewProject"").val('');
                $("".divAddWorkItems"").hide();
               // $("".divSectionExistingWorkItems"").show();
                // Change the button Caption to Add Pipeline
                $(""#btnprocess"").val('Add Pipeline');
            }
            if (optionval == ""1"") {
                // Show Create New Project Seaction
                $("".span-select"").removeClass(""span-show"");
                $("".span-select"").addClass(""span-hidden"");
                $("".divpipelinecaption"").html('Create Pipeline with New Project');
                $(""#txtnewProject"").prop('disabled', false);
       ");
            WriteLiteral(@"         $(""#txtnewProject"").val('');
                $("".divAddWorkItems"").show();
                addDefaultWorkItems();
                $("".divSectionExistingWorkItems"").hide();

                // Change the button Caption to Process
                $(""#btnprocess"").val('Process');
            }
        }

        $('input[type=radio][name=projectoption]').change(function () {
            checkprojectoption();
            checkProcessButton();
        });


        function registerbuttonEvent() {
            $("".btnselectproject"").click(function () {
                // alert($(this).attr(""data""));
                $(""#txtnewProject"").val($(this).attr(""data""));
                // Get WorkItem details as per Project Name
                var projectName = $(this).closest('td').next('td').text().trim();
                
                GetWorkItemList(projectName);
                
                checkProcessButton();

                // Add row highlighted on Select
             ");
            WriteLiteral(@"   // Remove selected highlighted from all rows
                // Add selected hightlight for self
                $("".btnselectproject"").closest(""tr"").removeClass('selectedTopMenu');
                $(this).closest(""tr"").addClass('selectedTopMenu');

                //Show WorkItem
                $("".divGotoCloudEconomy"").show();

                sessionStorage.setItem('currentSelectedProject', projectName);

            });
        }

        $("".getproject"").click(function (e) {
            //GetToken();
            ProjectList();

            //Put into Sesion Storage
            sessionStorage.setItem(""devOpsLogin"", ""True"");
        });

        $("".showList"").click(function (e) {
            //Hide result Section Message
            $("".divresult"").hide();
            //clear projectname text box
            $(""#txtnewProject"").val('');
            ProjectList();
        });

        $(""#txtnewProject"").keyup(function () {
            checkProcessButton();

        });");
            WriteLiteral(@"
        function checkProcessButton() {
            var isvalid = $(""#txtnewProject"").val().length > 0;
            if (isvalid) {
                $(""#btnprocess"").prop('disabled', false);
                $(""#btnprocess"").removeClass('disablebutton');
                $(""#btnprocess"").addClass('btn-blue');
            }
            else {
                $(""#btnprocess"").prop('disabled', true);
                $(""#btnprocess"").addClass('disablebutton');
                $(""#btnprocess"").removeClass('btn-blue');
            }
        }

        $(""#ddlprojectList"").change(function () {

            var selectedVal = $(this).find(':selected').val();
            var selectedText = $(this).find(':selected').text();

            $("".divstatus"").html('<br> You have sclected ' + selectedText);

        });

        $("".process"").click(function (e) {
            CreateProject();
        });

        $("".delete"").click(function (e) {
            DeleteProject();
        });

        funct");
            WriteLiteral(@"ion addDefaultWorkItems() {
            // If its First Task, then Add Below.
            if ($("".divWorkItemRow"").length == 1) {
                $("".divWorkItemRow:last .txtTaskTtile"").val('Create Resources for the Project');
            }
        }

        // Add new work Item
        $("".addworkitem"").click(function (e) {

            if ($("".divWorkItemRow"").length < 4) {
                //Clone the row Item
                var t = $("".divWorkItemRow:last"").clone()
                $(t).insertAfter("".divWorkItemRow:last"");

                // Clear the Text Area for the recent added 
                $("".divWorkItemRow:last .txtTaskTtile"").val('');
                $("".divWorkItemRow:last #ddlTaskType"").val(""0"")


                if ($("".divWorkItemRow"").length == 2) {
                    $("".divWorkItemRow:last .txtTaskTtile"").val('Create Economics for the Project');
                }

                if ($("".divWorkItemRow"").length == 3) {
                    $("".divWorkItemRow:la");
            WriteLiteral(@"st .txtTaskTtile"").val('Develop application as per Project');
                }

                if ($("".divWorkItemRow"").length == 4) {
                    $("".divWorkItemRow:last .txtTaskTtile"").val('Create CI /CD for the Application');
                }

                // Register the delete event
                $("".delworkitemrow"").click(function (e) {

                    $(this).closest("".divWorkItemRow"").remove();

                    // If there is only row then no need show the delete button.
                    if ($("".divWorkItemRow"").length == 1) {
                        // Hide the Delete button for all.
                        $("".divWorkItemRow .delworkitemrow"").hide();
                    }
                    else {
                        // Show the Delete button for last item
                        $("".divWorkItemRow:last .delworkitemrow"").show();
                    }
                });

                // If there is only one row then no need show the delete b");
            WriteLiteral(@"utton.
                if ($("".divWorkItemRow"").length > 1) {
                    // Hide the Delete button for all.
                    $("".divWorkItemRow .delworkitemrow"").hide();

                     // Show the Delete button for last item
                    $("".divWorkItemRow:last .delworkitemrow"").show();
                }
            }
        });

         // If there is only row then no need show the delete button.
        if ($("".divWorkItemRow"").length == 1) {
            // Hide the Delete button for all.
            $("".divWorkItemRow .delworkitemrow"").hide()
        }

    });
</script>

<script type=""text/javascript"">
    ShowModelPopUp = function () {
        var left = (screen.width);
        var top = (screen.height);
        window.open('/Pricing/Products', ""WindowPopup"", 'width=' + (screen.width) * 35 / 40 + ',height=400px, top= 100px, left = 100px');
    }
</script>

<br />
<div class=""headerinfo"">
    <div class=""connect"">
        <div class=""projectdivsec");
            WriteLiteral(@"tion"">
            <div class=""row-header""> Connect to Organisation</div>
            <div class=""divsectioncontent"">
                <div class=""rowdiv"">
                    <span>Organisation Name</span>
                    <span><input type=""text"" class=""inputtext"" id=""txtOrg"" value=""Benefactor-Clairvoyant"" /></span>
                </div>
                <div class=""rowdiv"">
                    <span>
                        Organisation PAT
                    </span>
                    <span style="" margin-left: 25px;""><input type=""password"" class=""inputtext"" id=""txtpat"" value=""nh6emfd3kbcveqxxrpzsdjizsiwlqmfgsr7nznttg6xx3yvsnvqq"" /></span>
                </div>
                <div class=""rowdiv marginbuttom-10"">
                    <span><input type=""button"" class=""getproject  btn-blue"" value=""Connect"" /></span>
                </div>
            </div>
        </div>
    </div>

    <div class=""loadingdiv text-center"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "46607405090bd6a41e59d162a8280adea622594c27421", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n");
            WriteLiteral(@"    <div class=""projectdivsection divprojectcreationoptionmain"">
        <div class=""row-header""> Create DevOps pipeline </div>
        <span class=""spaninfo"">Choose one option to create pipeline</span>
        <div class=""divoptioncontent"">
            <label>
                <input type=""radio"" name=""projectoption"" value=""0"" /> For Existing Project
            </label>
            <label class=""marginleft-50"">
                <input type=""radio"" name=""projectoption"" value=""1"" /> Create New Project
            </label>
        </div>
    </div>

    <div id=""divExistingProjectList""");
            BeginWriteAttribute("class", " class=\"", 19363, "\"", 19371, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n        <div");
            BeginWriteAttribute("class", " class=\"", 19387, "\"", 19395, 0);
            EndWriteAttribute();
            WriteLiteral(@">
            <div class=""projectdivsection"">
                <div class=""row-header""> Project List: </div>
                <span class=""spaninfo""> Click on the select button to Select project to add pipeline</span>
                <table id=""tblexistingProjects""></table>
            </div>


            <div class=""projectdivsection"">
                <div class=""row-header divpipelinecaption""> Create Pipeline from Existing Project </div>
                <span class=""spaninfo""> Enter Project Name and select Technology to create Project and Pipeline</span>
                <div class=""divsectioncontent marginleft-10"">

                    <div style="" display: inline-flex; width:100%"">
                        <div class=""divProjectName "">
                            ProjectName:
                            <input type=""text"" class=""inputtext"" id=""txtnewProject"" />
                        </div>
                        <div style=""margin-left:90px;margin-top:4px;"">
                            ");
            WriteLiteral("Technology:\r\n                            <select id=\"dlltechnology\">\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c30704", async() => {
                WriteLiteral(".net");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c31894", async() => {
                WriteLiteral("Java");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c33084", async() => {
                WriteLiteral("Python");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class=""projectdivsection divAddWorkItems"">
                <div class=""row-header""> Work Item</div>
                <span class=""spaninfo"">Add Work Item into the Project</span>

                <div class=""divWokItemContainer"" style=""margin-top:10px;"">
                    <div style="" display: inline-flex; width:100%; margin-left: 20px; margin-bottom:10px;"" class=""divWorkItemRow"">
                        <div class=""taskTitle "" style="" text-align: center; vertical-align: middle; display: inline-flex; "">
                            <div style=""vertical-align: middle;margin-top: 13px;margin-right: 20px;""> Title</div>
                            <textarea name=""Text1"" class=""txtTaskTtile"" disabled=""disabled"" cols=""60"" rows=""1""></textarea>
                        </div>
                        <div style=""margin-left:90px;margin-top:13px;"">
");
            WriteLiteral("                            TaskType:\r\n                            <select id=\"ddlTaskType\">\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c35460", async() => {
                WriteLiteral("Task");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c36650", async() => {
                WriteLiteral("Bug");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c37839", async() => {
                WriteLiteral("Epic");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c39029", async() => {
                WriteLiteral("Feature");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                            </select>
                        </div>
                        <div style="" margin-left: 20px; margin-top: 10px; "">
                            <input type=""button"" id=""btndelworkitemrow"" class="" delworkitemrow ui-icon ui-icon-closethick"" value=""Delete"" />
                        </div>
                    </div>
                    <div class=""divBtnWorkItem"">
                        <input type=""button"" id=""btnAddWorkItem"" class=""addworkitem btn-blue"" value=""Add New Work Item"" />
                    </div>
                </div>
            </div>


            <div class=""projectdivsection divSectionExistingWorkItems"">
                <div class=""row-header""> Work Items </div>
                <span class=""spaninfo""> Work Items list for the project</span>
                <table id=""tblexistingWorkItems""></table>
            </div>
            <div class=""inline-flex text-right"" style=""margin-left: 60%;"">
                <div class=""divGotoCloudEconomy gotoC");
            WriteLiteral("loudEconomy\" title=\"Go to Cloud Economics\">\r\n                    <span class=\"spanTopMenu\">\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46607405090bd6a41e59d162a8280adea622594c41401", async() => {
                WriteLiteral("Cloud Economics ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </span>
                </div>
                <div class=""divProcess"">
                    <input type=""button"" id=""btnprocess"" class=""process  disablebutton"" value=""Process"" />
                </div>
            </div>
            <div class=""projectcreationmessage""></div>
        </div>
");
            WriteLiteral(@"
        <br />
        <div class=""deletedv"" hidden>
            <span>Enter ProjectName to Delete</span>
            <span><input type=""text"" id=""txtdelProject"" /></span>
            <input type=""button"" class=""delete"" value=""Delete"" />
        </div>

    </div>

    <div class=""divresult"">
        <div class=""projectdivsection"">
            <div class=""row-header"">Success</div>
            <div class=""newsectionmessage""></div>
            <input type=""button"" class=""showList btn-blue"" value=""Show List"" />
        </div>
    </div>

    <div id=""status"" class=""divstatus""></div>
    <div id=""divToken"" class=""divtoken""></div>

</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
